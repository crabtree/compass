{{if .Values.global.systemFetcher.enabled }}
{{ $configmapName := printf "%s-%s-config" $.Chart.Name .Values.global.systemFetcher.name }}
{{ $secretName := printf "%s-%s-secrets" $.Chart.Name .Values.global.systemFetcher.name }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: "{{ $.Chart.Name }}-{{ .Values.global.systemFetcher.name }}"
spec:
  schedule: "{{ .Values.global.systemFetcher.schedule }}"
  failedJobsHistoryLimit: 5
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 60 # Fix for https://github.com/kyma-incubator/compass/issues/1155
  jobTemplate:
    metadata:
      labels:
        cronjob: {{ .Values.global.systemFetcher.name }}
    spec:
      template:
        metadata:
          labels:
            cronjob: {{ .Values.global.systemFetcher.name }}
        spec:
          containers:
            - name: system-fetcher
              image: {{ $.Values.global.images.containerRegistry.path }}/{{ $.Values.global.images.director.dir }}compass-director:{{ $.Values.global.images.director.version }}
              imagePullPolicy: IfNotPresent
              volumeMounts:
                - name: director-config
                  mountPath: /config
              env:
                - name: APP_SYSTEM_INFORMATION_PARALLELLISM
                  value: "{{ .Values.global.systemFetcher.fetchParallellism }}"
                - name: APP_SYSTEM_INFORMATION_FETCH_TIMEOUT
                  value: {{ .Values.global.systemFetcher.fetchTimeout }}
                - name: APP_SYSTEM_INFORMATION_ENDPOINT
                  valueFrom:
                    configMapKeyRef:
                      name: "{{ $configmapName }}"
                      key: system-information-api-endpoint
                - name: APP_SYSTEM_INFORMATION_FILTER_CRITERIA
                  valueFrom:
                    configMapKeyRef:
                      name: "{{ $configmapName }}"
                      key: system-information-api-filter-criteria
                - name: APP_SYSTEM_INFORMATION_FILTER_TENANT_CRITERIA_PATTERN
                  valueFrom:
                    configMapKeyRef:
                      name: "{{ $configmapName }}"
                      key: system-information-api-filter-tenant-criteria-pattern
                - name: APP_SYSTEM_INFORMATION_SYSTEM_TO_TEMPLATE_MAPPINGS
                  valueFrom:
                    configMapKeyRef:
                      name: "{{ $configmapName }}"
                      key: system-information-system-to-template-mappings
                - name: APP_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: "{{ $secretName }}"
                      key: oauth-client-id
                - name: APP_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: "{{ $secretName }}"
                      key: oauth-client-secret
                - name: APP_OAUTH_TOKEN_ENDPOINT_PATTERN
                  valueFrom:
                    secretKeyRef:
                      name: "{{ $secretName }}"
                      key: oauth-token-endpoint-pattern
                - name: APP_DB_USER
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-username
                - name: APP_DB_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-password
                - name: APP_DB_HOST
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-serviceName
                - name: APP_DB_PORT
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-servicePort
                - name: APP_DB_NAME
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-director-db-name
                - name: APP_DB_SSL
                  valueFrom:
                    secretKeyRef:
                      name: compass-postgresql
                      key: postgresql-sslMode
                - name: APP_DB_MAX_OPEN_CONNECTIONS
                  value: "{{ .Values.global.systemFetcher.dbPool.maxOpenConnections }}"
                - name: APP_DB_MAX_IDLE_CONNECTIONS
                  value: "{{ .Values.global.systemFetcher.dbPool.maxIdleConnections }}"
                - name: APP_CONFIGURATION_FILE
                  value: /config/config.yaml
              command:
                - "/bin/sh"
              args:
                - "-c"
                - "./systemfetcher; exit_code=$?; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
            {{if eq $.Values.global.database.embedded.enabled false}}
            - name: cloudsql-proxy
              image: gcr.io/cloudsql-docker/gce-proxy:1.18.0-alpine
              command:
                - /bin/sh
              args:
                - -c
                - "trap 'exit 0' SIGINT; /cloud_sql_proxy -instances={{ $.Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -credential_file=/secrets/cloudsql-instance-credentials/credentials.json"
              volumeMounts:
                - name: cloudsql-instance-credentials
                  mountPath: /secrets/cloudsql-instance-credentials
                  readOnly: true
            {{end}}
          restartPolicy: Never
          shareProcessNamespace: true
          volumes:
            {{if eq $.Values.global.database.embedded.enabled false}}
            - name: cloudsql-instance-credentials
              secret:
                secretName: cloudsql-instance-credentials
            {{end}}
            - name: director-config
              configMap:
                name: compass-director-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $configmapName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ $.Chart.Name }}
    release: {{ $.Release.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
    app.kubernetes.io/name: {{ template "name" . }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
data:
  system-information-api-endpoint: "{{ .Values.global.systemFetcher.systemsAPIEndpoint }}"
  system-information-api-filter-criteria: "{{ .Values.global.systemFetcher.systemsAPIFilterCriteria }}"
  system-information-api-filter-tenant-criteria-pattern: "{{ .Values.global.systemFetcher.systemsAPIFilterTenantCriteriaPattern }}"
  system-information-system-to-template-mappings: "{{ .Values.global.systemFetcher.systemToTemplateMappings }}"
{{- if and (eq .Values.global.systemFetcher.enabled true) (eq .Values.global.systemFetcher.manageSecrets true) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ .Release.Namespace }}
data:
  oauth-client-id: {{ .Values.global.systemFetcher.oauth.client | b64enc | quote }}
  oauth-client-secret: {{ .Values.global.systemFetcher.oauth.secret | b64enc | quote }}
  oauth-token-endpoint-pattern: {{ .Values.global.systemFetcher.oauth.tokenURLPattern | b64enc | quote }}
{{ end }}
{{ end }}
